/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../scripts/components/tableForm.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/forms/src/form_builder';
import * as import9 from '../../css/tableForm.css.shim';
import * as import10 from '../../css/weatherTable.css.shim';
import * as import11 from '../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import12 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import13 from '../../../scripts/components/multiselect.component';
import * as import14 from './multiselect.component.ngfactory';
import * as import15 from '../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import16 from '../../node_modules/@angular/forms/src/directives/checkbox_value_accessor.ngfactory';
import * as import17 from '../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import18 from '../../node_modules/@angular/forms/src/directives/number_value_accessor.ngfactory';
import * as import19 from '@angular/core/src/linker/view_container';
import * as import20 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import21 from '@angular/core/src/linker/element_ref';
import * as import22 from '@angular/core/src/linker/template_ref';
import * as import23 from '@angular/forms/src/directives/control_value_accessor';
import * as import24 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import25 from '@angular/forms/src/directives/ng_control';
import * as import26 from '@angular/forms/src/directives/ng_control_status';
import * as import27 from '@angular/forms/src/directives/checkbox_value_accessor';
import * as import28 from '@angular/forms/src/directives/default_value_accessor';
import * as import29 from '@angular/forms/src/directives/number_value_accessor';
import * as import30 from '@angular/common/src/directives/ng_if';
import * as import31 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import32 from '@angular/forms/src/directives/control_container';
import * as import33 from '../../../scripts/components/validationError.component';
import * as import34 from './validationError.component.ngfactory';
export class Wrapper_TableFormComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TableFormComponent;
  /*private*/ _changed:boolean;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.TableFormComponent(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.submitParametersNotify.subscribe(_eventHandler.bind(view,'submitParametersNotify'))); }
  }
}
var renderType_TableFormComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_TableFormComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.TableFormComponent>;
  _TableFormComponent_0_3:Wrapper_TableFormComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TableFormComponent_Host0,renderType_TableFormComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'table-form',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TableFormComponent0(this.viewUtils,this,0,this._el_0);
    this._TableFormComponent_0_3 = new Wrapper_TableFormComponent(this.injectorGet(import8.FormBuilder,this.parentIndex));
    this.compView_0.create(this._TableFormComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._TableFormComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TableFormComponent) && (0 === requestNodeIndex))) { return this._TableFormComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._TableFormComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._TableFormComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TableFormComponentNgFactory:import7.ComponentFactory<import0.TableFormComponent> = new import7.ComponentFactory<import0.TableFormComponent>('table-form',View_TableFormComponent_Host0,import0.TableFormComponent);
const styles_TableFormComponent:any[] = [
  import9.styles,
  import10.styles
]
;
var renderType_TableFormComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_TableFormComponent,{});
export class View_TableFormComponent0 extends import1.AppView<import0.TableFormComponent> {
  _el_0:any;
  _FormGroupDirective_0_3:import11.Wrapper_FormGroupDirective;
  _ControlContainer_0_4:any;
  _NgControlStatusGroup_0_5:import12.Wrapper_NgControlStatusGroup;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  compView_7:import1.AppView<import13.MultiselectControlComponent>;
  _MultiselectControlComponent_7_3:import14.Wrapper_MultiselectControlComponent;
  _NG_VALUE_ACCESSOR_7_4:any[];
  _FormControlName_7_5:import15.Wrapper_FormControlName;
  _NgControl_7_6:any;
  _NgControlStatus_7_7:import12.Wrapper_NgControlStatus;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _el_14:any;
  _CheckboxControlValueAccessor_14_3:import16.Wrapper_CheckboxControlValueAccessor;
  _NG_VALUE_ACCESSOR_14_4:any[];
  _FormControlName_14_5:import15.Wrapper_FormControlName;
  _NgControl_14_6:any;
  _NgControlStatus_14_7:import12.Wrapper_NgControlStatus;
  _text_15:any;
  _el_16:any;
  _text_17:any;
  _el_18:any;
  _text_19:any;
  _el_20:any;
  _text_21:any;
  _text_22:any;
  _el_23:any;
  _DefaultValueAccessor_23_3:import17.Wrapper_DefaultValueAccessor;
  _NumberValueAccessor_23_4:import18.Wrapper_NumberValueAccessor;
  _NG_VALUE_ACCESSOR_23_5:any[];
  _FormControlName_23_6:import15.Wrapper_FormControlName;
  _NgControl_23_7:any;
  _NgControlStatus_23_8:import12.Wrapper_NgControlStatus;
  _text_24:any;
  _text_25:any;
  _anchor_26:any;
  /*private*/ _vc_26:import19.ViewContainer;
  _TemplateRef_26_5:any;
  _NgIf_26_6:import20.Wrapper_NgIf;
  _text_27:any;
  _el_28:any;
  _text_29:any;
  _text_30:any;
  /*private*/ _expr_54:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TableFormComponent0,renderType_TableFormComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckOnce);
    this._expr_54 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'form',new import3.InlineArray2(2,'class','table-form'),(null as any));
    this._FormGroupDirective_0_3 = new import11.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_0_4 = this._FormGroupDirective_0_3.context;
    this._NgControlStatusGroup_0_5 = new import12.Wrapper_NgControlStatusGroup(this._ControlContainer_0_4);
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','form-row'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'label',new import3.InlineArray2(2,'class','form-cell'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'Weather parameters',(null as any));
    this._text_6 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_2,'multiselect',new import3.InlineArray4(4,'class','form-cell','formControlName','selectedOptions'),(null as any));
    this.compView_7 = new import14.View_MultiselectControlComponent0(this.viewUtils,this,7,this._el_7);
    this._MultiselectControlComponent_7_3 = new import14.Wrapper_MultiselectControlComponent();
    this._NG_VALUE_ACCESSOR_7_4 = [this._MultiselectControlComponent_7_3.context];
    this._FormControlName_7_5 = new import15.Wrapper_FormControlName(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_7_4);
    this._NgControl_7_6 = this._FormControlName_7_5.context;
    this._NgControlStatus_7_7 = new import12.Wrapper_NgControlStatus(this._NgControl_7_6);
    this._text_8 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.compView_7.create(this._MultiselectControlComponent_7_3.context);
    this._text_9 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_0,'br',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_11 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','form-row'),(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'\n        ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_12,'input',new import3.InlineArray8(8,'class','form-row','formControlName','showCoordinate','name','showCoordinate','type','checkbox'),(null as any));
    this._CheckboxControlValueAccessor_14_3 = new import16.Wrapper_CheckboxControlValueAccessor(this.renderer,new import21.ElementRef(this._el_14));
    this._NG_VALUE_ACCESSOR_14_4 = [this._CheckboxControlValueAccessor_14_3.context];
    this._FormControlName_14_5 = new import15.Wrapper_FormControlName(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_14_4);
    this._NgControl_14_6 = this._FormControlName_14_5.context;
    this._NgControlStatus_14_7 = new import12.Wrapper_NgControlStatus(this._NgControl_14_6);
    this._text_15 = this.renderer.createText(this._el_12,'Show Coordinate\n    ',(null as any));
    this._el_16 = import3.createRenderElement(this.renderer,this._el_0,'br',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_17 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_18 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','form-row'),(null as any));
    this._text_19 = this.renderer.createText(this._el_18,'\n        ',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,this._el_18,'label',new import3.InlineArray2(2,'class','form-cell'),(null as any));
    this._text_21 = this.renderer.createText(this._el_20,'Coordinate Precision',(null as any));
    this._text_22 = this.renderer.createText(this._el_18,'\n        ',(null as any));
    this._el_23 = import3.createRenderElement(this.renderer,this._el_18,'input',new import3.InlineArray8(8,'class','form-cell','formControlName','precision','name','precision','type','number'),(null as any));
    this._DefaultValueAccessor_23_3 = new import17.Wrapper_DefaultValueAccessor(this.renderer,new import21.ElementRef(this._el_23));
    this._NumberValueAccessor_23_4 = new import18.Wrapper_NumberValueAccessor(this.renderer,new import21.ElementRef(this._el_23));
    this._NG_VALUE_ACCESSOR_23_5 = [
      this._DefaultValueAccessor_23_3.context,
      this._NumberValueAccessor_23_4.context
    ]
    ;
    this._FormControlName_23_6 = new import15.Wrapper_FormControlName(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_23_5);
    this._NgControl_23_7 = this._FormControlName_23_6.context;
    this._NgControlStatus_23_8 = new import12.Wrapper_NgControlStatus(this._NgControl_23_7);
    this._text_24 = this.renderer.createText(this._el_18,'\n    ',(null as any));
    this._text_25 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_26 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_26 = new import19.ViewContainer(26,0,this,this._anchor_26);
    this._TemplateRef_26_5 = new import22.TemplateRef_(this,26,this._anchor_26);
    this._NgIf_26_6 = new import20.Wrapper_NgIf(this._vc_26.vcRef,this._TemplateRef_26_5);
    this._text_27 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_28 = import3.createRenderElement(this.renderer,this._el_0,'button',new import3.InlineArray2(2,'class','form-row'),(null as any));
    this._text_29 = this.renderer.createText(this._el_28,'Submit',(null as any));
    this._text_30 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_0));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_14,new import3.InlineArray4(4,'change',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_14));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_23,new import3.InlineArray8(6,'input',(null as any),'blur',(null as any),'change',(null as any)),this.eventHandler(this.handleEvent_23));
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_28,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_28));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._el_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._text_22,
      this._el_23,
      this._text_24,
      this._text_25,
      this._anchor_26,
      this._text_27,
      this._el_28,
      this._text_29,
      this._text_30
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.MultiselectControlComponent) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._MultiselectControlComponent_7_3.context; }
    if (((token === import23.NG_VALUE_ACCESSOR) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NG_VALUE_ACCESSOR_7_4; }
    if (((token === import24.FormControlName) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._FormControlName_7_5.context; }
    if (((token === import25.NgControl) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgControl_7_6; }
    if (((token === import26.NgControlStatus) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgControlStatus_7_7.context; }
    if (((token === import27.CheckboxControlValueAccessor) && (14 === requestNodeIndex))) { return this._CheckboxControlValueAccessor_14_3.context; }
    if (((token === import23.NG_VALUE_ACCESSOR) && (14 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_14_4; }
    if (((token === import24.FormControlName) && (14 === requestNodeIndex))) { return this._FormControlName_14_5.context; }
    if (((token === import25.NgControl) && (14 === requestNodeIndex))) { return this._NgControl_14_6; }
    if (((token === import26.NgControlStatus) && (14 === requestNodeIndex))) { return this._NgControlStatus_14_7.context; }
    if (((token === import28.DefaultValueAccessor) && (23 === requestNodeIndex))) { return this._DefaultValueAccessor_23_3.context; }
    if (((token === import29.NumberValueAccessor) && (23 === requestNodeIndex))) { return this._NumberValueAccessor_23_4.context; }
    if (((token === import23.NG_VALUE_ACCESSOR) && (23 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_23_5; }
    if (((token === import24.FormControlName) && (23 === requestNodeIndex))) { return this._FormControlName_23_6.context; }
    if (((token === import25.NgControl) && (23 === requestNodeIndex))) { return this._NgControl_23_7; }
    if (((token === import26.NgControlStatus) && (23 === requestNodeIndex))) { return this._NgControlStatus_23_8.context; }
    if (((token === import22.TemplateRef) && (26 === requestNodeIndex))) { return this._TemplateRef_26_5; }
    if (((token === import30.NgIf) && (26 === requestNodeIndex))) { return this._NgIf_26_6.context; }
    if (((token === import31.FormGroupDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 30)))) { return this._FormGroupDirective_0_3.context; }
    if (((token === import32.ControlContainer) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 30)))) { return this._ControlContainer_0_4; }
    if (((token === import26.NgControlStatusGroup) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 30)))) { return this._NgControlStatusGroup_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.form;
    this._FormGroupDirective_0_3.check_form(currVal_0_0_0,throwOnChange,false);
    this._FormGroupDirective_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatusGroup_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_7_0_0:any = this.context.options;
    this._MultiselectControlComponent_7_3.check_selectedOptions(currVal_7_0_0,throwOnChange,false);
    if (this._MultiselectControlComponent_7_3.ngDoCheck(this,this._el_7,throwOnChange)) { this.compView_7.markAsCheckOnce(); }
    const currVal_7_1_0:any = 'selectedOptions';
    this._FormControlName_7_5.check_name(currVal_7_1_0,throwOnChange,false);
    this._FormControlName_7_5.ngDoCheck(this,this._el_7,throwOnChange);
    this._NgControlStatus_7_7.ngDoCheck(this,this._el_7,throwOnChange);
    this._CheckboxControlValueAccessor_14_3.ngDoCheck(this,this._el_14,throwOnChange);
    const currVal_14_1_0:any = 'showCoordinate';
    this._FormControlName_14_5.check_name(currVal_14_1_0,throwOnChange,false);
    this._FormControlName_14_5.ngDoCheck(this,this._el_14,throwOnChange);
    this._NgControlStatus_14_7.ngDoCheck(this,this._el_14,throwOnChange);
    this._DefaultValueAccessor_23_3.ngDoCheck(this,this._el_23,throwOnChange);
    this._NumberValueAccessor_23_4.ngDoCheck(this,this._el_23,throwOnChange);
    const currVal_23_2_0:any = 'precision';
    this._FormControlName_23_6.check_name(currVal_23_2_0,throwOnChange,false);
    this._FormControlName_23_6.ngDoCheck(this,this._el_23,throwOnChange);
    this._NgControlStatus_23_8.ngDoCheck(this,this._el_23,throwOnChange);
    const currVal_26_0_0:any = (this.context.form.controls['precision'] && !this.context.form.controls['precision'].valid);
    this._NgIf_26_6.check_ngIf(currVal_26_0_0,throwOnChange,false);
    this._NgIf_26_6.ngDoCheck(this,this._anchor_26,throwOnChange);
    this._vc_26.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatusGroup_0_5.checkHost(this,this,this._el_0,throwOnChange);
    this._NgControlStatus_7_7.checkHost(this,this.compView_7,this._el_7,throwOnChange);
    this._NgControlStatus_14_7.checkHost(this,this,this._el_14,throwOnChange);
    this._NgControlStatus_23_8.checkHost(this,this,this._el_23,throwOnChange);
    const currVal_54:boolean = !this.context.form.valid;
    if (import3.checkBinding(throwOnChange,this._expr_54,currVal_54)) {
      this.renderer.setElementProperty(this._el_28,'disabled',currVal_54);
      this._expr_54 = currVal_54;
    }
    this.compView_7.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_26.destroyNestedViews();
    this.compView_7.destroy();
    this._FormControlName_7_5.ngOnDestroy();
    this._FormControlName_14_5.ngOnDestroy();
    this._FormControlName_23_6.ngOnDestroy();
    this._FormGroupDirective_0_3.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 26)) { return new View_TableFormComponent1(this.viewUtils,this,26,this._anchor_26,this._vc_26); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_14(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._CheckboxControlValueAccessor_14_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_23(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_23_3.handleEvent(eventName,$event) && result);
    result = (this._NumberValueAccessor_23_4.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_28(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onSubmit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_TableFormComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import19.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import20.Wrapper_NgIf;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import19.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import20.Wrapper_NgIf;
  _text_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import19.ViewContainer) {
    super(View_TableFormComponent1,renderType_TableFormComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import19.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import22.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import20.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import19.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import22.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import20.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._anchor_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import22.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import30.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import22.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import30.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.form.controls['precision'].hasError('required');
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_4_0_0:any = (this.parentView.context.form.controls['precision'].hasError('validatePrecision') && !this.parentView.context.form.controls['precision'].hasError('required'));
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_4.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 2)) { return new View_TableFormComponent2(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 4)) { return new View_TableFormComponent3(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    return (null as any);
  }
}
class View_TableFormComponent2 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import33.ValidationErrorComponent>;
  _ValidationErrorComponent_0_3:import34.Wrapper_ValidationErrorComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import19.ViewContainer) {
    super(View_TableFormComponent2,renderType_TableFormComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'validation-error',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import34.View_ValidationErrorComponent0(this.viewUtils,this,0,this._el_0);
    this._ValidationErrorComponent_0_3 = new import34.Wrapper_ValidationErrorComponent();
    this.compView_0.create(this._ValidationErrorComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import33.ValidationErrorComponent) && (0 === requestNodeIndex))) { return this._ValidationErrorComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'Precision is required';
    this._ValidationErrorComponent_0_3.check_message(currVal_0_0_0,throwOnChange,false);
    if (this._ValidationErrorComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_TableFormComponent3 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import33.ValidationErrorComponent>;
  _ValidationErrorComponent_0_3:import34.Wrapper_ValidationErrorComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import19.ViewContainer) {
    super(View_TableFormComponent3,renderType_TableFormComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'validation-error',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import34.View_ValidationErrorComponent0(this.viewUtils,this,0,this._el_0);
    this._ValidationErrorComponent_0_3 = new import34.Wrapper_ValidationErrorComponent();
    this.compView_0.create(this._ValidationErrorComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import33.ValidationErrorComponent) && (0 === requestNodeIndex))) { return this._ValidationErrorComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'Precision should be integer value from 0 till 4';
    this._ValidationErrorComponent_0_3.check_message(currVal_0_0_0,throwOnChange,false);
    if (this._ValidationErrorComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}