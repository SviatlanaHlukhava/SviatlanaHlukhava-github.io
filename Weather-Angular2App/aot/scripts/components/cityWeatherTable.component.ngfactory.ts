/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../scripts/components/cityWeatherTable.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../css/weatherTable.css.shim';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/common/src/directives/ng_if';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/common/src/directives/ng_for';
import * as import16 from '../../../scripts/components/cityWeather.component';
import * as import17 from './cityWeather.component.ngfactory';
import * as import18 from '../directives/weatherColor.directive.ngfactory';
import * as import19 from '@angular/core/src/linker/element_ref';
import * as import20 from '../../../scripts/directives/weatherColor.directive';
export class Wrapper_CityWeatherTableComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CityWeatherTableComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  subscription1:any;
  constructor() {
    this._changed = false;
    this.context = new import0.CityWeatherTableComponent();
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_weatherList(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.weatherList = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.deleteNotify.subscribe(_eventHandler.bind(view,'deleteNotify'))); }
    if (emit1) { (this.subscription1 = this.context.selectNotify.subscribe(_eventHandler.bind(view,'selectNotify'))); }
  }
}
var renderType_CityWeatherTableComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CityWeatherTableComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CityWeatherTableComponent>;
  _CityWeatherTableComponent_0_3:Wrapper_CityWeatherTableComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CityWeatherTableComponent_Host0,renderType_CityWeatherTableComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'city-weather-table',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CityWeatherTableComponent0(this.viewUtils,this,0,this._el_0);
    this._CityWeatherTableComponent_0_3 = new Wrapper_CityWeatherTableComponent();
    this.compView_0.create(this._CityWeatherTableComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._CityWeatherTableComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CityWeatherTableComponent) && (0 === requestNodeIndex))) { return this._CityWeatherTableComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._CityWeatherTableComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CityWeatherTableComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CityWeatherTableComponentNgFactory:import7.ComponentFactory<import0.CityWeatherTableComponent> = new import7.ComponentFactory<import0.CityWeatherTableComponent>('city-weather-table',View_CityWeatherTableComponent_Host0,import0.CityWeatherTableComponent);
const styles_CityWeatherTableComponent:any[] = [import8.styles];
var renderType_CityWeatherTableComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_CityWeatherTableComponent,{});
export class View_CityWeatherTableComponent0 extends import2.AppView<import0.CityWeatherTableComponent> {
  _anchor_0:any;
  /*private*/ _vc_0:import9.ViewContainer;
  _TemplateRef_0_5:any;
  _NgIf_0_6:import10.Wrapper_NgIf;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CityWeatherTableComponent0,renderType_CityWeatherTableComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_0 = new import9.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import11.TemplateRef_(this,0,this._anchor_0);
    this._NgIf_0_6 = new import10.Wrapper_NgIf(this._vc_0.vcRef,this._TemplateRef_0_5);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._anchor_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import12.NgIf) && (0 === requestNodeIndex))) { return this._NgIf_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = (this.context.weatherList && this.context.weatherList.length);
    this._NgIf_0_6.check_ngIf(currVal_0_0_0,throwOnChange,false);
    this._NgIf_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_CityWeatherTableComponent1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    return (null as any);
  }
}
class View_CityWeatherTableComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  _el_15:any;
  _text_16:any;
  _text_17:any;
  _el_18:any;
  _text_19:any;
  _text_20:any;
  _el_21:any;
  _text_22:any;
  _text_23:any;
  _el_24:any;
  _text_25:any;
  _text_26:any;
  _el_27:any;
  _text_28:any;
  _text_29:any;
  _el_30:any;
  _text_31:any;
  _text_32:any;
  _el_33:any;
  _text_34:any;
  _text_35:any;
  _text_36:any;
  _text_37:any;
  _el_38:any;
  _text_39:any;
  _anchor_40:any;
  /*private*/ _vc_40:import9.ViewContainer;
  _TemplateRef_40_5:any;
  _NgFor_40_6:import13.Wrapper_NgFor;
  _text_41:any;
  _text_42:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import9.ViewContainer) {
    super(View_CityWeatherTableComponent1,renderType_CityWeatherTableComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'table',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'thead',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'tr',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'City',(null as any));
    this._text_8 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_10 = this.renderer.createText(this._el_9,'Latitude',(null as any));
    this._text_11 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'Longitude',(null as any));
    this._text_14 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_16 = this.renderer.createText(this._el_15,'Overall conditions',(null as any));
    this._text_17 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_18 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_19 = this.renderer.createText(this._el_18,'Temperature, ℃',(null as any));
    this._text_20 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_21 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_22 = this.renderer.createText(this._el_21,'Humidity',(null as any));
    this._text_23 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_24 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_25 = this.renderer.createText(this._el_24,'Pressure',(null as any));
    this._text_26 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_27 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_28 = this.renderer.createText(this._el_27,'Wind',(null as any));
    this._text_29 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_30 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_31 = this.renderer.createText(this._el_30,'Clouds',(null as any));
    this._text_32 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_33 = import3.createRenderElement(this.renderer,this._el_4,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_34 = this.renderer.createText(this._el_33,'Actions',(null as any));
    this._text_35 = this.renderer.createText(this._el_4,'\n        ',(null as any));
    this._text_36 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_37 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_38 = import3.createRenderElement(this.renderer,this._el_0,'tbody',new import3.InlineArray2(2,'class','weather-table-body'),(null as any));
    this._text_39 = this.renderer.createText(this._el_38,'   \n        ',(null as any));
    this._anchor_40 = this.renderer.createTemplateAnchor(this._el_38,(null as any));
    this._vc_40 = new import9.ViewContainer(40,38,this,this._anchor_40);
    this._TemplateRef_40_5 = new import11.TemplateRef_(this,40,this._anchor_40);
    this._NgFor_40_6 = new import13.Wrapper_NgFor(this._vc_40.vcRef,this._TemplateRef_40_5,this.parentView.injectorGet(import14.IterableDiffers,this.parentIndex),this.parentView.ref);
    this._text_41 = this.renderer.createText(this._el_38,'             \n    ',(null as any));
    this._text_42 = this.renderer.createText(this._el_0,'           \n',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._text_17,
      this._el_18,
      this._text_19,
      this._text_20,
      this._el_21,
      this._text_22,
      this._text_23,
      this._el_24,
      this._text_25,
      this._text_26,
      this._el_27,
      this._text_28,
      this._text_29,
      this._el_30,
      this._text_31,
      this._text_32,
      this._el_33,
      this._text_34,
      this._text_35,
      this._text_36,
      this._text_37,
      this._el_38,
      this._text_39,
      this._anchor_40,
      this._text_41,
      this._text_42
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TemplateRef) && (40 === requestNodeIndex))) { return this._TemplateRef_40_5; }
    if (((token === import15.NgFor) && (40 === requestNodeIndex))) { return this._NgFor_40_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_40_0_0:any = this.parentView.context.weatherList;
    this._NgFor_40_6.check_ngForOf(currVal_40_0_0,throwOnChange,false);
    this._NgFor_40_6.ngDoCheck(this,this._anchor_40,throwOnChange);
    this._vc_40.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_40.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 40)) { return new View_CityWeatherTableComponent2(this.viewUtils,this,40,this._anchor_40,this._vc_40); }
    return (null as any);
  }
}
class View_CityWeatherTableComponent2 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import16.CityWeatherComponent>;
  _CityWeatherComponent_0_3:import17.Wrapper_CityWeatherComponent;
  _WeatherColorDirective_0_4:import18.Wrapper_WeatherColorDirective;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import9.ViewContainer) {
    super(View_CityWeatherTableComponent2,renderType_CityWeatherTableComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'tr',new import3.InlineArray4(4,'city-weather','','weather-color',''),(null as any));
    this.compView_0 = new import17.View_CityWeatherComponent0(this.viewUtils,this,0,this._el_0);
    this._CityWeatherComponent_0_3 = new import17.Wrapper_CityWeatherComponent();
    this._WeatherColorDirective_0_4 = new import18.Wrapper_WeatherColorDirective(new import19.ElementRef(this._el_0));
    this._text_1 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.compView_0.create(this._CityWeatherComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'deleteNotify',(null as any),'selectNotify',(null as any)),this.eventHandler(this.handleEvent_0));
    this._CityWeatherComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.CityWeatherComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._CityWeatherComponent_0_3.context; }
    if (((token === import20.WeatherColorDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._WeatherColorDirective_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.$implicit;
    this._CityWeatherComponent_0_3.check_weather(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.context.index;
    this._CityWeatherComponent_0_3.check_index(currVal_0_0_1,throwOnChange,false);
    if (this._CityWeatherComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    const currVal_0_1_0:any = this.context.$implicit;
    this._WeatherColorDirective_0_4.check_weather(currVal_0_1_0,throwOnChange,false);
    this._WeatherColorDirective_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CityWeatherComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'deleteNotify')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.remove($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'selectNotify')) {
      const pd_sub_1:any = ((<any>this.parentView.parentView.context.select($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}