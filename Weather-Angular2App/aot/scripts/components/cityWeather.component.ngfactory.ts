/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../scripts/components/cityWeather.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../css/weatherTable.css.shim';
import * as import9 from '../../../scripts/components/weatherIcon.component';
import * as import10 from './weatherIcon.component.ngfactory';
import * as import11 from '../../../scripts/components/windSection.component';
import * as import12 from './windSection.component.ngfactory';
import * as import13 from '@angular/common/src/pipes/number_pipe';
import * as import14 from '../../../scripts/pipes/kelvinToCelsius.pipe';
import * as import15 from '@angular/core/src/i18n/tokens';
export class Wrapper_CityWeatherComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CityWeatherComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  subscription0:any;
  subscription1:any;
  constructor() {
    this._changed = false;
    this.context = new import0.CityWeatherComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_weather(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.weather = currValue;
      this._expr_0 = currValue;
    }
  }
  check_index(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.index = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.deleteNotify.subscribe(_eventHandler.bind(view,'deleteNotify'))); }
    if (emit1) { (this.subscription1 = this.context.selectNotify.subscribe(_eventHandler.bind(view,'selectNotify'))); }
  }
}
var renderType_CityWeatherComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CityWeatherComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CityWeatherComponent>;
  _CityWeatherComponent_0_3:Wrapper_CityWeatherComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CityWeatherComponent_Host0,renderType_CityWeatherComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'div',new import3.InlineArray2(2,'city-weather',''),rootSelector,(null as any));
    this.compView_0 = new View_CityWeatherComponent0(this.viewUtils,this,0,this._el_0);
    this._CityWeatherComponent_0_3 = new Wrapper_CityWeatherComponent();
    this.compView_0.create(this._CityWeatherComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._CityWeatherComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CityWeatherComponent) && (0 === requestNodeIndex))) { return this._CityWeatherComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._CityWeatherComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CityWeatherComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CityWeatherComponentNgFactory:import7.ComponentFactory<import0.CityWeatherComponent> = new import7.ComponentFactory<import0.CityWeatherComponent>('[city-weather]',View_CityWeatherComponent_Host0,import0.CityWeatherComponent);
const styles_CityWeatherComponent:any[] = [import8.styles];
var renderType_CityWeatherComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_CityWeatherComponent,{});
export class View_CityWeatherComponent0 extends import2.AppView<import0.CityWeatherComponent> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _el_10:any;
  compView_10:import2.AppView<import9.WeatherIconComponent>;
  _WeatherIconComponent_10_3:import10.Wrapper_WeatherIconComponent;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  _el_15:any;
  _text_16:any;
  _text_17:any;
  _el_18:any;
  _text_19:any;
  _text_20:any;
  _el_21:any;
  _el_22:any;
  compView_22:import2.AppView<import11.WindSectionComponent>;
  _WindSectionComponent_22_3:import12.Wrapper_WindSectionComponent;
  _text_23:any;
  _el_24:any;
  _text_25:any;
  _text_26:any;
  _el_27:any;
  _text_28:any;
  _el_29:any;
  _text_30:any;
  _text_31:any;
  _el_32:any;
  _text_33:any;
  _text_34:any;
  /*private*/ _expr_39:any;
  /*private*/ _expr_40:any;
  _pipe_number_0:import13.DecimalPipe;
  _pipe_number_0_0:any;
  /*private*/ _expr_43:any;
  _pipe_number_0_1:any;
  /*private*/ _expr_45:any;
  _pipe_sgKelvinToCelsius_1:import14.KelvinToCelsiusPipe;
  _pipe_sgKelvinToCelsius_1_0:any;
  /*private*/ _expr_48:any;
  /*private*/ _expr_49:any;
  /*private*/ _expr_50:any;
  /*private*/ _expr_51:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CityWeatherComponent0,renderType_CityWeatherComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckOnce);
    this._expr_39 = import1.UNINITIALIZED;
    this._expr_40 = import1.UNINITIALIZED;
    this._expr_43 = import1.UNINITIALIZED;
    this._expr_45 = import1.UNINITIALIZED;
    this._expr_48 = import1.UNINITIALIZED;
    this._expr_49 = import1.UNINITIALIZED;
    this._expr_50 = import1.UNINITIALIZED;
    this._expr_51 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._text_2 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_9,'weather-icon',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_10 = new import10.View_WeatherIconComponent0(this.viewUtils,this,10,this._el_10);
    this._WeatherIconComponent_10_3 = new import10.Wrapper_WeatherIconComponent();
    this.compView_10.create(this._WeatherIconComponent_10_3.context);
    this._text_11 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'',(null as any));
    this._text_14 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_16 = this.renderer.createText(this._el_15,'',(null as any));
    this._text_17 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_18 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_19 = this.renderer.createText(this._el_18,'',(null as any));
    this._text_20 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_21 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_22 = import3.createRenderElement(this.renderer,this._el_21,'wind-section',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_22 = new import12.View_WindSectionComponent0(this.viewUtils,this,22,this._el_22);
    this._WindSectionComponent_22_3 = new import12.Wrapper_WindSectionComponent();
    this.compView_22.create(this._WindSectionComponent_22_3.context);
    this._text_23 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_24 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_25 = this.renderer.createText(this._el_24,'',(null as any));
    this._text_26 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_27 = import3.createRenderElement(this.renderer,parentRenderNode,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_28 = this.renderer.createText(this._el_27,'\n    ',(null as any));
    this._el_29 = import3.createRenderElement(this.renderer,this._el_27,'button',new import3.InlineArray2(2,'class','table-btn'),(null as any));
    this._text_30 = this.renderer.createText(this._el_29,'Delete',(null as any));
    this._text_31 = this.renderer.createText(this._el_27,'\n    ',(null as any));
    this._el_32 = import3.createRenderElement(this.renderer,this._el_27,'button',new import3.InlineArray2(2,'class','table-btn'),(null as any));
    this._text_33 = this.renderer.createText(this._el_32,'',(null as any));
    this._text_34 = this.renderer.createText(this._el_27,'\n',(null as any));
    this._pipe_number_0 = new import13.DecimalPipe(this.parentView.injectorGet(import15.LOCALE_ID,this.parentIndex));
    this._pipe_number_0_0 = import3.pureProxy2(this._pipe_number_0.transform.bind(this._pipe_number_0));
    this._pipe_number_0_1 = import3.pureProxy2(this._pipe_number_0.transform.bind(this._pipe_number_0));
    this._pipe_sgKelvinToCelsius_1 = new import14.KelvinToCelsiusPipe();
    this._pipe_sgKelvinToCelsius_1_0 = import3.pureProxy2(this._pipe_sgKelvinToCelsius_1.transform.bind(this._pipe_sgKelvinToCelsius_1));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_29,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_29));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_32,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_32));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._text_17,
      this._el_18,
      this._text_19,
      this._text_20,
      this._el_21,
      this._el_22,
      this._text_23,
      this._el_24,
      this._text_25,
      this._text_26,
      this._el_27,
      this._text_28,
      this._el_29,
      this._text_30,
      this._text_31,
      this._el_32,
      this._text_33,
      this._text_34
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.WeatherIconComponent) && (10 === requestNodeIndex))) { return this._WeatherIconComponent_10_3.context; }
    if (((token === import11.WindSectionComponent) && (22 === requestNodeIndex))) { return this._WindSectionComponent_22_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import1.ValueUnwrapper();
    const currVal_10_0_0:any = this.context.weather.getDescription();
    this._WeatherIconComponent_10_3.check_description(currVal_10_0_0,throwOnChange,false);
    if (this._WeatherIconComponent_10_3.ngDoCheck(this,this._el_10,throwOnChange)) { this.compView_10.markAsCheckOnce(); }
    const currVal_22_0_0:any = this.context.weather.getWind();
    this._WindSectionComponent_22_3.check_wind(currVal_22_0_0,throwOnChange,false);
    if (this._WindSectionComponent_22_3.ngDoCheck(this,this._el_22,throwOnChange)) { this.compView_22.markAsCheckOnce(); }
    const currVal_39:any = import3.inlineInterpolate(1,'',(this.context.weather.getCity() + (this.context.weather.getSelected()? ' *': '')),'');
    if (import3.checkBinding(throwOnChange,this._expr_39,currVal_39)) {
      this.renderer.setText(this._text_1,currVal_39);
      this._expr_39 = currVal_39;
    }
    valUnwrapper.reset();
    const currVal_40:any = import3.inlineInterpolate(1,'',valUnwrapper.unwrap(import3.castByValue(this._pipe_number_0_0,this._pipe_number_0.transform)(this.context.weather.getCoordinate().getLatitude(),'1.0-3')),'');
    if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange,this._expr_40,currVal_40))) {
      this.renderer.setText(this._text_4,currVal_40);
      this._expr_40 = currVal_40;
    }
    valUnwrapper.reset();
    const currVal_43:any = import3.inlineInterpolate(1,'',valUnwrapper.unwrap(import3.castByValue(this._pipe_number_0_1,this._pipe_number_0.transform)(this.context.weather.getCoordinate().getLongitude(),'1.0-3')),'');
    if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange,this._expr_43,currVal_43))) {
      this.renderer.setText(this._text_7,currVal_43);
      this._expr_43 = currVal_43;
    }
    valUnwrapper.reset();
    const currVal_45:any = import3.inlineInterpolate(1,'',valUnwrapper.unwrap(import3.castByValue(this._pipe_sgKelvinToCelsius_1_0,this._pipe_sgKelvinToCelsius_1.transform)(this.context.weather.getMainParams().getTemperature(),1)),'');
    if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange,this._expr_45,currVal_45))) {
      this.renderer.setText(this._text_13,currVal_45);
      this._expr_45 = currVal_45;
    }
    const currVal_48:any = import3.inlineInterpolate(1,'',this.context.weather.getMainParams().getHumidity(),'');
    if (import3.checkBinding(throwOnChange,this._expr_48,currVal_48)) {
      this.renderer.setText(this._text_16,currVal_48);
      this._expr_48 = currVal_48;
    }
    const currVal_49:any = import3.inlineInterpolate(1,'',this.context.weather.getMainParams().getPressure(),'');
    if (import3.checkBinding(throwOnChange,this._expr_49,currVal_49)) {
      this.renderer.setText(this._text_19,currVal_49);
      this._expr_49 = currVal_49;
    }
    const currVal_50:any = import3.inlineInterpolate(1,'',this.context.weather.getCloud().getAll(),'');
    if (import3.checkBinding(throwOnChange,this._expr_50,currVal_50)) {
      this.renderer.setText(this._text_25,currVal_50);
      this._expr_50 = currVal_50;
    }
    const currVal_51:any = import3.inlineInterpolate(1,'',(this.context.weather.getSelected()? 'Unselect': 'Select'),'');
    if (import3.checkBinding(throwOnChange,this._expr_51,currVal_51)) {
      this.renderer.setText(this._text_33,currVal_51);
      this._expr_51 = currVal_51;
    }
    this.compView_10.detectChanges(throwOnChange);
    this.compView_22.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_10.destroy();
    this.compView_22.destroy();
  }
  handleEvent_29(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.remove()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_32(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.select()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}