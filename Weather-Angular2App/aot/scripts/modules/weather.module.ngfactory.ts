/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../scripts/modules/weather.module';
import * as import2 from '@angular/forms/src/directives';
import * as import3 from '@angular/forms/src/form_providers';
import * as import4 from '@angular/common/src/common_module';
import * as import5 from '../../../scripts/modules/shared.module';
import * as import6 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import7 from '@angular/forms/src/form_builder';
import * as import8 from '@angular/common/src/localization';
import * as import9 from '../../../scripts/services/WeatherDTOtoWeatherConverter';
import * as import10 from '../../../scripts/services/WeatherAPI';
import * as import11 from '../../../scripts/actions/WeatherActions';
import * as import12 from '@angular/core/src/di/injector';
import * as import13 from '@angular/core/src/i18n/tokens';
class WeatherModuleInjector extends import0.NgModuleInjector<import1.WeatherModule> {
  _InternalFormsSharedModule_0:import2.InternalFormsSharedModule;
  _FormsModule_1:import3.FormsModule;
  _ReactiveFormsModule_2:import3.ReactiveFormsModule;
  _CommonModule_3:import4.CommonModule;
  _SharedModule_4:import5.SharedModule;
  _WeatherModule_5:import1.WeatherModule;
  __RadioControlRegistry_6:import6.RadioControlRegistry;
  __FormBuilder_7:import7.FormBuilder;
  __NgLocalization_8:import8.NgLocaleLocalization;
  __WeatherDTOtoWeatherConverter_9:import9.WeatherDTOtoWeatherConverter;
  __WeatherApiService_10:import10.WeatherApiService;
  __WeatherActions_11:import11.WeatherActions;
  constructor(parent:import12.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _RadioControlRegistry_6():import6.RadioControlRegistry {
    if ((this.__RadioControlRegistry_6 == null)) { (this.__RadioControlRegistry_6 = new import6.RadioControlRegistry()); }
    return this.__RadioControlRegistry_6;
  }
  get _FormBuilder_7():import7.FormBuilder {
    if ((this.__FormBuilder_7 == null)) { (this.__FormBuilder_7 = new import7.FormBuilder()); }
    return this.__FormBuilder_7;
  }
  get _NgLocalization_8():import8.NgLocaleLocalization {
    if ((this.__NgLocalization_8 == null)) { (this.__NgLocalization_8 = new import8.NgLocaleLocalization(this.parent.get(import13.LOCALE_ID))); }
    return this.__NgLocalization_8;
  }
  get _WeatherDTOtoWeatherConverter_9():import9.WeatherDTOtoWeatherConverter {
    if ((this.__WeatherDTOtoWeatherConverter_9 == null)) { (this.__WeatherDTOtoWeatherConverter_9 = new import9.WeatherDTOtoWeatherConverter()); }
    return this.__WeatherDTOtoWeatherConverter_9;
  }
  get _WeatherApiService_10():import10.WeatherApiService {
    if ((this.__WeatherApiService_10 == null)) { (this.__WeatherApiService_10 = new import10.WeatherApiService(this._WeatherDTOtoWeatherConverter_9)); }
    return this.__WeatherApiService_10;
  }
  get _WeatherActions_11():import11.WeatherActions {
    if ((this.__WeatherActions_11 == null)) { (this.__WeatherActions_11 = new import11.WeatherActions()); }
    return this.__WeatherActions_11;
  }
  createInternal():import1.WeatherModule {
    this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
    this._FormsModule_1 = new import3.FormsModule();
    this._ReactiveFormsModule_2 = new import3.ReactiveFormsModule();
    this._CommonModule_3 = new import4.CommonModule();
    this._SharedModule_4 = new import5.SharedModule();
    this._WeatherModule_5 = new import1.WeatherModule();
    return this._WeatherModule_5;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_0; }
    if ((token === import3.FormsModule)) { return this._FormsModule_1; }
    if ((token === import3.ReactiveFormsModule)) { return this._ReactiveFormsModule_2; }
    if ((token === import4.CommonModule)) { return this._CommonModule_3; }
    if ((token === import5.SharedModule)) { return this._SharedModule_4; }
    if ((token === import1.WeatherModule)) { return this._WeatherModule_5; }
    if ((token === import6.RadioControlRegistry)) { return this._RadioControlRegistry_6; }
    if ((token === import7.FormBuilder)) { return this._FormBuilder_7; }
    if ((token === import8.NgLocalization)) { return this._NgLocalization_8; }
    if ((token === import9.WeatherDTOtoWeatherConverter)) { return this._WeatherDTOtoWeatherConverter_9; }
    if ((token === import10.WeatherApiService)) { return this._WeatherApiService_10; }
    if ((token === import11.WeatherActions)) { return this._WeatherActions_11; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const WeatherModuleNgFactory:import0.NgModuleFactory<import1.WeatherModule> = new import0.NgModuleFactory(WeatherModuleInjector,import1.WeatherModule);