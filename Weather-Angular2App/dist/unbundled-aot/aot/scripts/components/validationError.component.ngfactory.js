/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../scripts/components/validationError.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
export var Wrapper_ValidationErrorComponent = (function () {
    function Wrapper_ValidationErrorComponent() {
        this._changed = false;
        this.context = new import0.ValidationErrorComponent();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_ValidationErrorComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ValidationErrorComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_ValidationErrorComponent.prototype.check_message = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.message = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ValidationErrorComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ValidationErrorComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ValidationErrorComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ValidationErrorComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ValidationErrorComponent;
}());
var renderType_ValidationErrorComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_ValidationErrorComponent_Host0 = (function (_super) {
    __extends(View_ValidationErrorComponent_Host0, _super);
    function View_ValidationErrorComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ValidationErrorComponent_Host0, renderType_ValidationErrorComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_ValidationErrorComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'validation-error', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_ValidationErrorComponent0(this.viewUtils, this, 0, this._el_0);
        this._ValidationErrorComponent_0_3 = new Wrapper_ValidationErrorComponent();
        this.compView_0.create(this._ValidationErrorComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._ValidationErrorComponent_0_3.context);
    };
    View_ValidationErrorComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ValidationErrorComponent) && (0 === requestNodeIndex))) {
            return this._ValidationErrorComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_ValidationErrorComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._ValidationErrorComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_ValidationErrorComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_ValidationErrorComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ValidationErrorComponent_Host0;
}(import2.AppView));
export var ValidationErrorComponentNgFactory = new import7.ComponentFactory('validation-error', View_ValidationErrorComponent_Host0, import0.ValidationErrorComponent);
var styles_ValidationErrorComponent = ['.error-message[_ngcontent-%COMP%] {color: red; font-style: italic }'];
var renderType_ValidationErrorComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_ValidationErrorComponent, {});
export var View_ValidationErrorComponent0 = (function (_super) {
    __extends(View_ValidationErrorComponent0, _super);
    function View_ValidationErrorComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ValidationErrorComponent0, renderType_ValidationErrorComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_ValidationErrorComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'span', new import3.InlineArray2(2, 'class', 'error-message'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_ValidationErrorComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = import3.inlineInterpolate(1, '', this.context.message, '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    return View_ValidationErrorComponent0;
}(import2.AppView));
//# sourceMappingURL=validationError.component.ngfactory.js.map