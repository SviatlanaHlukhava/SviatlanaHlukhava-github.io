/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../scripts/components/multiselect.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/forms/src/directives/control_value_accessor';
import * as import9 from '../../css/multiselect.css.shim';
import * as import10 from '../../node_modules/@angular/forms/src/directives/select_multiple_control_value_accessor.ngfactory';
import * as import11 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import12 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import18 from '@angular/common/src/directives/ng_for';
import * as import19 from '@angular/forms/src/directives/select_multiple_control_value_accessor';
import * as import20 from '@angular/forms/src/directives/ng_model';
import * as import21 from '@angular/forms/src/directives/ng_control';
import * as import22 from '@angular/forms/src/directives/ng_control_status';
import * as import23 from '../../node_modules/@angular/forms/src/directives/select_control_value_accessor.ngfactory';
import * as import24 from '@angular/forms/src/directives/select_control_value_accessor';
export var Wrapper_MultiselectControlComponent = (function () {
    function Wrapper_MultiselectControlComponent() {
        this._changed = false;
        this.context = new import0.MultiselectControlComponent();
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_MultiselectControlComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MultiselectControlComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_MultiselectControlComponent.prototype.check_selectedOptions = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.selectedOptions = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_MultiselectControlComponent.prototype.check_unselectedOptions = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.unselectedOptions = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_MultiselectControlComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MultiselectControlComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MultiselectControlComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MultiselectControlComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MultiselectControlComponent;
}());
var renderType_MultiselectControlComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_MultiselectControlComponent_Host0 = (function (_super) {
    __extends(View_MultiselectControlComponent_Host0, _super);
    function View_MultiselectControlComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MultiselectControlComponent_Host0, renderType_MultiselectControlComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    Object.defineProperty(View_MultiselectControlComponent_Host0.prototype, "_NG_VALUE_ACCESSOR_0_4", {
        get: function () {
            if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) {
                (this.__NG_VALUE_ACCESSOR_0_4 = [this._MultiselectControlComponent_0_3.context]);
            }
            return this.__NG_VALUE_ACCESSOR_0_4;
        },
        enumerable: true,
        configurable: true
    });
    View_MultiselectControlComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'multiselect', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_MultiselectControlComponent0(this.viewUtils, this, 0, this._el_0);
        this._MultiselectControlComponent_0_3 = new Wrapper_MultiselectControlComponent();
        this.compView_0.create(this._MultiselectControlComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._MultiselectControlComponent_0_3.context);
    };
    View_MultiselectControlComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.MultiselectControlComponent) && (0 === requestNodeIndex))) {
            return this._MultiselectControlComponent_0_3.context;
        }
        if (((token === import8.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_4;
        }
        return notFoundResult;
    };
    View_MultiselectControlComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._MultiselectControlComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_MultiselectControlComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_MultiselectControlComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_MultiselectControlComponent_Host0;
}(import2.AppView));
export var MultiselectControlComponentNgFactory = new import7.ComponentFactory('multiselect', View_MultiselectControlComponent_Host0, import0.MultiselectControlComponent);
var styles_MultiselectControlComponent = [import9.styles];
var renderType_MultiselectControlComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_MultiselectControlComponent, {});
export var View_MultiselectControlComponent0 = (function (_super) {
    __extends(View_MultiselectControlComponent0, _super);
    function View_MultiselectControlComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MultiselectControlComponent0, renderType_MultiselectControlComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
        this._expr_37 = import1.UNINITIALIZED;
        this._expr_38 = import1.UNINITIALIZED;
    }
    View_MultiselectControlComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'row'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'select', new import3.InlineArray4(4, 'class', 'cell multiselect', 'multiple', ''), null);
        this._SelectMultipleControlValueAccessor_2_3 = new import10.Wrapper_SelectMultipleControlValueAccessor(this.renderer, new import15.ElementRef(this._el_2));
        this._NG_VALUE_ACCESSOR_2_4 = [this._SelectMultipleControlValueAccessor_2_3.context];
        this._NgModel_2_5 = new import11.Wrapper_NgModel(null, null, null, this._NG_VALUE_ACCESSOR_2_4);
        this._NgControl_2_6 = this._NgModel_2_5.context;
        this._NgControlStatus_2_7 = new import12.Wrapper_NgControlStatus(this._NgControl_2_6);
        this._text_3 = this.renderer.createText(this._el_2, '\n        ', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._vc_4 = new import13.ViewContainer(4, 2, this, this._anchor_4);
        this._TemplateRef_4_5 = new import16.TemplateRef_(this, 4, this._anchor_4);
        this._NgFor_4_6 = new import14.Wrapper_NgFor(this._vc_4.vcRef, this._TemplateRef_4_5, this.parentView.injectorGet(import17.IterableDiffers, this.parentIndex), this.ref);
        this._text_5 = this.renderer.createText(this._el_2, '\n    ', null);
        this._text_6 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'cell arrow-buttons'), null);
        this._text_8 = this.renderer.createText(this._el_7, '\n        ', null);
        this._el_9 = import3.createRenderElement(this.renderer, this._el_7, 'button', import3.EMPTY_INLINE_ARRAY, null);
        this._text_10 = this.renderer.createText(this._el_9, '→', null);
        this._text_11 = this.renderer.createText(this._el_7, '\n        ', null);
        this._el_12 = import3.createRenderElement(this.renderer, this._el_7, 'button', import3.EMPTY_INLINE_ARRAY, null);
        this._text_13 = this.renderer.createText(this._el_12, '←', null);
        this._text_14 = this.renderer.createText(this._el_7, '\n    ', null);
        this._text_15 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_16 = import3.createRenderElement(this.renderer, this._el_0, 'select', new import3.InlineArray4(4, 'class', 'cell multiselect', 'multiple', ''), null);
        this._SelectMultipleControlValueAccessor_16_3 = new import10.Wrapper_SelectMultipleControlValueAccessor(this.renderer, new import15.ElementRef(this._el_16));
        this._NG_VALUE_ACCESSOR_16_4 = [this._SelectMultipleControlValueAccessor_16_3.context];
        this._NgModel_16_5 = new import11.Wrapper_NgModel(null, null, null, this._NG_VALUE_ACCESSOR_16_4);
        this._NgControl_16_6 = this._NgModel_16_5.context;
        this._NgControlStatus_16_7 = new import12.Wrapper_NgControlStatus(this._NgControl_16_6);
        this._text_17 = this.renderer.createText(this._el_16, '\n        ', null);
        this._anchor_18 = this.renderer.createTemplateAnchor(this._el_16, null);
        this._vc_18 = new import13.ViewContainer(18, 16, this, this._anchor_18);
        this._TemplateRef_18_5 = new import16.TemplateRef_(this, 18, this._anchor_18);
        this._NgFor_18_6 = new import14.Wrapper_NgFor(this._vc_18.vcRef, this._TemplateRef_18_5, this.parentView.injectorGet(import17.IterableDiffers, this.parentIndex), this.ref);
        this._text_19 = this.renderer.createText(this._el_16, '\n    ', null);
        this._text_20 = this.renderer.createText(this._el_0, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray8(6, 'ngModelChange', null, 'change', null, 'blur', null), this.eventHandler(this.handleEvent_2));
        this._NgModel_2_5.subscribe(this, this.eventHandler(this.handleEvent_2), true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_9, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_9));
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_12, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_12));
        var disposable_3 = import3.subscribeToRenderElement(this, this._el_16, new import3.InlineArray8(6, 'ngModelChange', null, 'change', null, 'blur', null), this.eventHandler(this.handleEvent_16));
        this._NgModel_16_5.subscribe(this, this.eventHandler(this.handleEvent_16), true);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._anchor_4,
            this._text_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._text_15,
            this._el_16,
            this._text_17,
            this._anchor_18,
            this._text_19,
            this._text_20
        ]), [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3
        ]);
        return null;
    };
    View_MultiselectControlComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import18.NgFor) && (4 === requestNodeIndex))) {
            return this._NgFor_4_6.context;
        }
        if (((token === import19.SelectMultipleControlValueAccessor) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 5)))) {
            return this._SelectMultipleControlValueAccessor_2_3.context;
        }
        if (((token === import8.NG_VALUE_ACCESSOR) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 5)))) {
            return this._NG_VALUE_ACCESSOR_2_4;
        }
        if (((token === import20.NgModel) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 5)))) {
            return this._NgModel_2_5.context;
        }
        if (((token === import21.NgControl) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 5)))) {
            return this._NgControl_2_6;
        }
        if (((token === import22.NgControlStatus) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 5)))) {
            return this._NgControlStatus_2_7.context;
        }
        if (((token === import16.TemplateRef) && (18 === requestNodeIndex))) {
            return this._TemplateRef_18_5;
        }
        if (((token === import18.NgFor) && (18 === requestNodeIndex))) {
            return this._NgFor_18_6.context;
        }
        if (((token === import19.SelectMultipleControlValueAccessor) && ((16 <= requestNodeIndex) && (requestNodeIndex <= 19)))) {
            return this._SelectMultipleControlValueAccessor_16_3.context;
        }
        if (((token === import8.NG_VALUE_ACCESSOR) && ((16 <= requestNodeIndex) && (requestNodeIndex <= 19)))) {
            return this._NG_VALUE_ACCESSOR_16_4;
        }
        if (((token === import20.NgModel) && ((16 <= requestNodeIndex) && (requestNodeIndex <= 19)))) {
            return this._NgModel_16_5.context;
        }
        if (((token === import21.NgControl) && ((16 <= requestNodeIndex) && (requestNodeIndex <= 19)))) {
            return this._NgControl_16_6;
        }
        if (((token === import22.NgControlStatus) && ((16 <= requestNodeIndex) && (requestNodeIndex <= 19)))) {
            return this._NgControlStatus_16_7.context;
        }
        return notFoundResult;
    };
    View_MultiselectControlComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._SelectMultipleControlValueAccessor_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_2_1_0 = this.context.checkedUnselected;
        this._NgModel_2_5.check_model(currVal_2_1_0, throwOnChange, false);
        this._NgModel_2_5.ngDoCheck(this, this._el_2, throwOnChange);
        this._NgControlStatus_2_7.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_4_0_0 = this.context.unselectedOptions;
        this._NgFor_4_6.check_ngForOf(currVal_4_0_0, throwOnChange, false);
        this._NgFor_4_6.ngDoCheck(this, this._anchor_4, throwOnChange);
        this._SelectMultipleControlValueAccessor_16_3.ngDoCheck(this, this._el_16, throwOnChange);
        var currVal_16_1_0 = this.context.checkedSelected;
        this._NgModel_16_5.check_model(currVal_16_1_0, throwOnChange, false);
        this._NgModel_16_5.ngDoCheck(this, this._el_16, throwOnChange);
        this._NgControlStatus_16_7.ngDoCheck(this, this._el_16, throwOnChange);
        var currVal_18_0_0 = this.context.selectedOptions;
        this._NgFor_18_6.check_ngForOf(currVal_18_0_0, throwOnChange, false);
        this._NgFor_18_6.ngDoCheck(this, this._anchor_18, throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
        this._vc_18.detectChangesInNestedViews(throwOnChange);
        this._NgControlStatus_2_7.checkHost(this, this, this._el_2, throwOnChange);
        var currVal_37 = (((!this.context.unselectedOptions || !this.context.unselectedOptions.length) || !this.context.checkedUnselected) || !this.context.checkedUnselected.length);
        if (import3.checkBinding(throwOnChange, this._expr_37, currVal_37)) {
            this.renderer.setElementProperty(this._el_9, 'disabled', currVal_37);
            this._expr_37 = currVal_37;
        }
        var currVal_38 = (((!this.context.selectedOptions || !this.context.selectedOptions.length) || !this.context.checkedSelected) || !this.context.checkedSelected.length);
        if (import3.checkBinding(throwOnChange, this._expr_38, currVal_38)) {
            this.renderer.setElementProperty(this._el_12, 'disabled', currVal_38);
            this._expr_38 = currVal_38;
        }
        this._NgControlStatus_16_7.checkHost(this, this, this._el_16, throwOnChange);
    };
    View_MultiselectControlComponent0.prototype.destroyInternal = function () {
        this._vc_4.destroyNestedViews();
        this._vc_18.destroyNestedViews();
        this._NgModel_2_5.ngOnDestroy();
        this._NgModel_16_5.ngOnDestroy();
    };
    View_MultiselectControlComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 4)) {
            return new View_MultiselectControlComponent1(this.viewUtils, this, 4, this._anchor_4, this._vc_4);
        }
        if ((nodeIndex == 18)) {
            return new View_MultiselectControlComponent2(this.viewUtils, this, 18, this._anchor_18, this._vc_18);
        }
        return null;
    };
    View_MultiselectControlComponent0.prototype.handleEvent_2 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._SelectMultipleControlValueAccessor_2_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.checkedUnselected = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_MultiselectControlComponent0.prototype.handleEvent_9 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.moveToSelected() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_MultiselectControlComponent0.prototype.handleEvent_12 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.moveToUnselected() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_MultiselectControlComponent0.prototype.handleEvent_16 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._SelectMultipleControlValueAccessor_16_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.checkedSelected = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_MultiselectControlComponent0;
}(import2.AppView));
var View_MultiselectControlComponent1 = (function (_super) {
    __extends(View_MultiselectControlComponent1, _super);
    function View_MultiselectControlComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MultiselectControlComponent1, renderType_MultiselectControlComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_4 = import1.UNINITIALIZED;
    }
    View_MultiselectControlComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'option', import3.EMPTY_INLINE_ARRAY, null);
        this._NgSelectOption_0_3 = new import23.Wrapper_NgSelectOption(new import15.ElementRef(this._el_0), this.renderer, null);
        this._NgSelectMultipleOption_0_4 = new import10.Wrapper_NgSelectMultipleOption(new import15.ElementRef(this._el_0), this.renderer, this.parentView._SelectMultipleControlValueAccessor_2_3.context);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_MultiselectControlComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import24.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgSelectOption_0_3.context;
        }
        if (((token === import19.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgSelectMultipleOption_0_4.context;
        }
        return notFoundResult;
    };
    View_MultiselectControlComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.$implicit;
        this._NgSelectOption_0_3.check_value(currVal_0_0_0, throwOnChange, false);
        this._NgSelectOption_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_1_0 = this.context.$implicit;
        this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0, throwOnChange, false);
        this._NgSelectMultipleOption_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_4 = import3.inlineInterpolate(1, '', this.context.$implicit, '');
        if (import3.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setText(this._text_1, currVal_4);
            this._expr_4 = currVal_4;
        }
    };
    View_MultiselectControlComponent1.prototype.destroyInternal = function () {
        this._NgSelectOption_0_3.ngOnDestroy();
        this._NgSelectMultipleOption_0_4.ngOnDestroy();
    };
    View_MultiselectControlComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_MultiselectControlComponent1;
}(import2.AppView));
var View_MultiselectControlComponent2 = (function (_super) {
    __extends(View_MultiselectControlComponent2, _super);
    function View_MultiselectControlComponent2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MultiselectControlComponent2, renderType_MultiselectControlComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_4 = import1.UNINITIALIZED;
    }
    View_MultiselectControlComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'option', import3.EMPTY_INLINE_ARRAY, null);
        this._NgSelectOption_0_3 = new import23.Wrapper_NgSelectOption(new import15.ElementRef(this._el_0), this.renderer, null);
        this._NgSelectMultipleOption_0_4 = new import10.Wrapper_NgSelectMultipleOption(new import15.ElementRef(this._el_0), this.renderer, this.parentView._SelectMultipleControlValueAccessor_16_3.context);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_MultiselectControlComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import24.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgSelectOption_0_3.context;
        }
        if (((token === import19.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgSelectMultipleOption_0_4.context;
        }
        return notFoundResult;
    };
    View_MultiselectControlComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.$implicit;
        this._NgSelectOption_0_3.check_value(currVal_0_0_0, throwOnChange, false);
        this._NgSelectOption_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_1_0 = this.context.$implicit;
        this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0, throwOnChange, false);
        this._NgSelectMultipleOption_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_4 = import3.inlineInterpolate(1, '', this.context.$implicit, '');
        if (import3.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setText(this._text_1, currVal_4);
            this._expr_4 = currVal_4;
        }
    };
    View_MultiselectControlComponent2.prototype.destroyInternal = function () {
        this._NgSelectOption_0_3.ngOnDestroy();
        this._NgSelectMultipleOption_0_4.ngOnDestroy();
    };
    View_MultiselectControlComponent2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_MultiselectControlComponent2;
}(import2.AppView));
//# sourceMappingURL=multiselect.component.ngfactory.js.map