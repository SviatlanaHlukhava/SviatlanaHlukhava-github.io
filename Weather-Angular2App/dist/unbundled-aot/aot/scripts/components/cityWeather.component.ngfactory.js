/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../scripts/components/cityWeather.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../css/weatherTable.css.shim';
import * as import9 from '../../../scripts/components/weatherIcon.component';
import * as import10 from './weatherIcon.component.ngfactory';
import * as import11 from '../../../scripts/components/windSection.component';
import * as import12 from './windSection.component.ngfactory';
import * as import13 from '@angular/common/src/pipes/number_pipe';
import * as import14 from '../../../scripts/pipes/kelvinToCelsius.pipe';
import * as import15 from '@angular/core/src/i18n/tokens';
export var Wrapper_CityWeatherComponent = (function () {
    function Wrapper_CityWeatherComponent() {
        this._changed = false;
        this.context = new import0.CityWeatherComponent();
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_CityWeatherComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_CityWeatherComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
    };
    Wrapper_CityWeatherComponent.prototype.check_weather = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.weather = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_CityWeatherComponent.prototype.check_index = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.index = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_CityWeatherComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_CityWeatherComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_CityWeatherComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_CityWeatherComponent.prototype.subscribe = function (view, _eventHandler, emit0, emit1) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.deleteNotify.subscribe(_eventHandler.bind(view, 'deleteNotify')));
        }
        if (emit1) {
            (this.subscription1 = this.context.selectNotify.subscribe(_eventHandler.bind(view, 'selectNotify')));
        }
    };
    return Wrapper_CityWeatherComponent;
}());
var renderType_CityWeatherComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_CityWeatherComponent_Host0 = (function (_super) {
    __extends(View_CityWeatherComponent_Host0, _super);
    function View_CityWeatherComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_CityWeatherComponent_Host0, renderType_CityWeatherComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_CityWeatherComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'div', new import3.InlineArray2(2, 'city-weather', ''), rootSelector, null);
        this.compView_0 = new View_CityWeatherComponent0(this.viewUtils, this, 0, this._el_0);
        this._CityWeatherComponent_0_3 = new Wrapper_CityWeatherComponent();
        this.compView_0.create(this._CityWeatherComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._CityWeatherComponent_0_3.context);
    };
    View_CityWeatherComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.CityWeatherComponent) && (0 === requestNodeIndex))) {
            return this._CityWeatherComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_CityWeatherComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._CityWeatherComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_CityWeatherComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._CityWeatherComponent_0_3.ngOnDestroy();
    };
    View_CityWeatherComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_CityWeatherComponent_Host0;
}(import2.AppView));
export var CityWeatherComponentNgFactory = new import7.ComponentFactory('[city-weather]', View_CityWeatherComponent_Host0, import0.CityWeatherComponent);
var styles_CityWeatherComponent = [import8.styles];
var renderType_CityWeatherComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_CityWeatherComponent, {});
export var View_CityWeatherComponent0 = (function (_super) {
    __extends(View_CityWeatherComponent0, _super);
    function View_CityWeatherComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_CityWeatherComponent0, renderType_CityWeatherComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
        this._expr_39 = import1.UNINITIALIZED;
        this._expr_40 = import1.UNINITIALIZED;
        this._expr_43 = import1.UNINITIALIZED;
        this._expr_45 = import1.UNINITIALIZED;
        this._expr_48 = import1.UNINITIALIZED;
        this._expr_49 = import1.UNINITIALIZED;
        this._expr_50 = import1.UNINITIALIZED;
        this._expr_51 = import1.UNINITIALIZED;
    }
    View_CityWeatherComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_3 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_4 = this.renderer.createText(this._el_3, '', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_6 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_7 = this.renderer.createText(this._el_6, '', null);
        this._text_8 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_9 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._el_10 = import3.createRenderElement(this.renderer, this._el_9, 'weather-icon', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_10 = new import10.View_WeatherIconComponent0(this.viewUtils, this, 10, this._el_10);
        this._WeatherIconComponent_10_3 = new import10.Wrapper_WeatherIconComponent();
        this.compView_10.create(this._WeatherIconComponent_10_3.context);
        this._text_11 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_12 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_13 = this.renderer.createText(this._el_12, '', null);
        this._text_14 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_15 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_16 = this.renderer.createText(this._el_15, '', null);
        this._text_17 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_18 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_19 = this.renderer.createText(this._el_18, '', null);
        this._text_20 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_21 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._el_22 = import3.createRenderElement(this.renderer, this._el_21, 'wind-section', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_22 = new import12.View_WindSectionComponent0(this.viewUtils, this, 22, this._el_22);
        this._WindSectionComponent_22_3 = new import12.Wrapper_WindSectionComponent();
        this.compView_22.create(this._WindSectionComponent_22_3.context);
        this._text_23 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_24 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_25 = this.renderer.createText(this._el_24, '', null);
        this._text_26 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_27 = import3.createRenderElement(this.renderer, parentRenderNode, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_28 = this.renderer.createText(this._el_27, '\n    ', null);
        this._el_29 = import3.createRenderElement(this.renderer, this._el_27, 'button', new import3.InlineArray2(2, 'class', 'table-btn'), null);
        this._text_30 = this.renderer.createText(this._el_29, 'Delete', null);
        this._text_31 = this.renderer.createText(this._el_27, '\n    ', null);
        this._el_32 = import3.createRenderElement(this.renderer, this._el_27, 'button', new import3.InlineArray2(2, 'class', 'table-btn'), null);
        this._text_33 = this.renderer.createText(this._el_32, '', null);
        this._text_34 = this.renderer.createText(this._el_27, '\n', null);
        this._pipe_number_0 = new import13.DecimalPipe(this.parentView.injectorGet(import15.LOCALE_ID, this.parentIndex));
        this._pipe_number_0_0 = import3.pureProxy2(this._pipe_number_0.transform.bind(this._pipe_number_0));
        this._pipe_number_0_1 = import3.pureProxy2(this._pipe_number_0.transform.bind(this._pipe_number_0));
        this._pipe_sgKelvinToCelsius_1 = new import14.KelvinToCelsiusPipe();
        this._pipe_sgKelvinToCelsius_1_0 = import3.pureProxy2(this._pipe_sgKelvinToCelsius_1.transform.bind(this._pipe_sgKelvinToCelsius_1));
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_29, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_29));
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_32, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_32));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._text_8,
            this._el_9,
            this._el_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._el_15,
            this._text_16,
            this._text_17,
            this._el_18,
            this._text_19,
            this._text_20,
            this._el_21,
            this._el_22,
            this._text_23,
            this._el_24,
            this._text_25,
            this._text_26,
            this._el_27,
            this._text_28,
            this._el_29,
            this._text_30,
            this._text_31,
            this._el_32,
            this._text_33,
            this._text_34
        ]), [
            disposable_0,
            disposable_1
        ]);
        return null;
    };
    View_CityWeatherComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import9.WeatherIconComponent) && (10 === requestNodeIndex))) {
            return this._WeatherIconComponent_10_3.context;
        }
        if (((token === import11.WindSectionComponent) && (22 === requestNodeIndex))) {
            return this._WindSectionComponent_22_3.context;
        }
        return notFoundResult;
    };
    View_CityWeatherComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var valUnwrapper = new import1.ValueUnwrapper();
        var currVal_10_0_0 = this.context.weather.getDescription();
        this._WeatherIconComponent_10_3.check_description(currVal_10_0_0, throwOnChange, false);
        if (this._WeatherIconComponent_10_3.ngDoCheck(this, this._el_10, throwOnChange)) {
            this.compView_10.markAsCheckOnce();
        }
        var currVal_22_0_0 = this.context.weather.getWind();
        this._WindSectionComponent_22_3.check_wind(currVal_22_0_0, throwOnChange, false);
        if (this._WindSectionComponent_22_3.ngDoCheck(this, this._el_22, throwOnChange)) {
            this.compView_22.markAsCheckOnce();
        }
        var currVal_39 = import3.inlineInterpolate(1, '', (this.context.weather.getCity() + (this.context.weather.getSelected() ? ' *' : '')), '');
        if (import3.checkBinding(throwOnChange, this._expr_39, currVal_39)) {
            this.renderer.setText(this._text_1, currVal_39);
            this._expr_39 = currVal_39;
        }
        valUnwrapper.reset();
        var currVal_40 = import3.inlineInterpolate(1, '', valUnwrapper.unwrap(import3.castByValue(this._pipe_number_0_0, this._pipe_number_0.transform)(this.context.weather.getCoordinate().getLatitude(), '1.0-3')), '');
        if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange, this._expr_40, currVal_40))) {
            this.renderer.setText(this._text_4, currVal_40);
            this._expr_40 = currVal_40;
        }
        valUnwrapper.reset();
        var currVal_43 = import3.inlineInterpolate(1, '', valUnwrapper.unwrap(import3.castByValue(this._pipe_number_0_1, this._pipe_number_0.transform)(this.context.weather.getCoordinate().getLongitude(), '1.0-3')), '');
        if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange, this._expr_43, currVal_43))) {
            this.renderer.setText(this._text_7, currVal_43);
            this._expr_43 = currVal_43;
        }
        valUnwrapper.reset();
        var currVal_45 = import3.inlineInterpolate(1, '', valUnwrapper.unwrap(import3.castByValue(this._pipe_sgKelvinToCelsius_1_0, this._pipe_sgKelvinToCelsius_1.transform)(this.context.weather.getMainParams().getTemperature(), 1)), '');
        if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange, this._expr_45, currVal_45))) {
            this.renderer.setText(this._text_13, currVal_45);
            this._expr_45 = currVal_45;
        }
        var currVal_48 = import3.inlineInterpolate(1, '', this.context.weather.getMainParams().getHumidity(), '');
        if (import3.checkBinding(throwOnChange, this._expr_48, currVal_48)) {
            this.renderer.setText(this._text_16, currVal_48);
            this._expr_48 = currVal_48;
        }
        var currVal_49 = import3.inlineInterpolate(1, '', this.context.weather.getMainParams().getPressure(), '');
        if (import3.checkBinding(throwOnChange, this._expr_49, currVal_49)) {
            this.renderer.setText(this._text_19, currVal_49);
            this._expr_49 = currVal_49;
        }
        var currVal_50 = import3.inlineInterpolate(1, '', this.context.weather.getCloud().getAll(), '');
        if (import3.checkBinding(throwOnChange, this._expr_50, currVal_50)) {
            this.renderer.setText(this._text_25, currVal_50);
            this._expr_50 = currVal_50;
        }
        var currVal_51 = import3.inlineInterpolate(1, '', (this.context.weather.getSelected() ? 'Unselect' : 'Select'), '');
        if (import3.checkBinding(throwOnChange, this._expr_51, currVal_51)) {
            this.renderer.setText(this._text_33, currVal_51);
            this._expr_51 = currVal_51;
        }
        this.compView_10.detectChanges(throwOnChange);
        this.compView_22.detectChanges(throwOnChange);
    };
    View_CityWeatherComponent0.prototype.destroyInternal = function () {
        this.compView_10.destroy();
        this.compView_22.destroy();
    };
    View_CityWeatherComponent0.prototype.handleEvent_29 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.remove() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_CityWeatherComponent0.prototype.handleEvent_32 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.select() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_CityWeatherComponent0;
}(import2.AppView));
//# sourceMappingURL=cityWeather.component.ngfactory.js.map