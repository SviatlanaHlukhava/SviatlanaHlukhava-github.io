/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../scripts/components/cityWeatherTable.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../css/weatherTable.css.shim';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/common/src/directives/ng_if';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/common/src/directives/ng_for';
import * as import16 from '../../../scripts/components/cityWeather.component';
import * as import17 from './cityWeather.component.ngfactory';
import * as import18 from '../directives/weatherColor.directive.ngfactory';
import * as import19 from '@angular/core/src/linker/element_ref';
import * as import20 from '../../../scripts/directives/weatherColor.directive';
export var Wrapper_CityWeatherTableComponent = (function () {
    function Wrapper_CityWeatherTableComponent() {
        this._changed = false;
        this.context = new import0.CityWeatherTableComponent();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_CityWeatherTableComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_CityWeatherTableComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
    };
    Wrapper_CityWeatherTableComponent.prototype.check_weatherList = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.weatherList = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_CityWeatherTableComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_CityWeatherTableComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_CityWeatherTableComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_CityWeatherTableComponent.prototype.subscribe = function (view, _eventHandler, emit0, emit1) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.deleteNotify.subscribe(_eventHandler.bind(view, 'deleteNotify')));
        }
        if (emit1) {
            (this.subscription1 = this.context.selectNotify.subscribe(_eventHandler.bind(view, 'selectNotify')));
        }
    };
    return Wrapper_CityWeatherTableComponent;
}());
var renderType_CityWeatherTableComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_CityWeatherTableComponent_Host0 = (function (_super) {
    __extends(View_CityWeatherTableComponent_Host0, _super);
    function View_CityWeatherTableComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_CityWeatherTableComponent_Host0, renderType_CityWeatherTableComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_CityWeatherTableComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'city-weather-table', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_CityWeatherTableComponent0(this.viewUtils, this, 0, this._el_0);
        this._CityWeatherTableComponent_0_3 = new Wrapper_CityWeatherTableComponent();
        this.compView_0.create(this._CityWeatherTableComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._CityWeatherTableComponent_0_3.context);
    };
    View_CityWeatherTableComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.CityWeatherTableComponent) && (0 === requestNodeIndex))) {
            return this._CityWeatherTableComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_CityWeatherTableComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._CityWeatherTableComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_CityWeatherTableComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._CityWeatherTableComponent_0_3.ngOnDestroy();
    };
    View_CityWeatherTableComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_CityWeatherTableComponent_Host0;
}(import2.AppView));
export var CityWeatherTableComponentNgFactory = new import7.ComponentFactory('city-weather-table', View_CityWeatherTableComponent_Host0, import0.CityWeatherTableComponent);
var styles_CityWeatherTableComponent = [import8.styles];
var renderType_CityWeatherTableComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_CityWeatherTableComponent, {});
export var View_CityWeatherTableComponent0 = (function (_super) {
    __extends(View_CityWeatherTableComponent0, _super);
    function View_CityWeatherTableComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_CityWeatherTableComponent0, renderType_CityWeatherTableComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
    }
    View_CityWeatherTableComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_0 = new import9.ViewContainer(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import11.TemplateRef_(this, 0, this._anchor_0);
        this._NgIf_0_6 = new import10.Wrapper_NgIf(this._vc_0.vcRef, this._TemplateRef_0_5);
        this.init(null, (this.renderer.directRenderer ? null : [this._anchor_0]), null);
        return null;
    };
    View_CityWeatherTableComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import12.NgIf) && (0 === requestNodeIndex))) {
            return this._NgIf_0_6.context;
        }
        return notFoundResult;
    };
    View_CityWeatherTableComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = (this.context.weatherList && this.context.weatherList.length);
        this._NgIf_0_6.check_ngIf(currVal_0_0_0, throwOnChange, false);
        this._NgIf_0_6.ngDoCheck(this, this._anchor_0, throwOnChange);
        this._vc_0.detectChangesInNestedViews(throwOnChange);
    };
    View_CityWeatherTableComponent0.prototype.destroyInternal = function () {
        this._vc_0.destroyNestedViews();
    };
    View_CityWeatherTableComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 0)) {
            return new View_CityWeatherTableComponent1(this.viewUtils, this, 0, this._anchor_0, this._vc_0);
        }
        return null;
    };
    return View_CityWeatherTableComponent0;
}(import2.AppView));
var View_CityWeatherTableComponent1 = (function (_super) {
    __extends(View_CityWeatherTableComponent1, _super);
    function View_CityWeatherTableComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_CityWeatherTableComponent1, renderType_CityWeatherTableComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_CityWeatherTableComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'table', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'thead', import3.EMPTY_INLINE_ARRAY, null);
        this._text_3 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'tr', import3.EMPTY_INLINE_ARRAY, null);
        this._text_5 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_6 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_7 = this.renderer.createText(this._el_6, 'City', null);
        this._text_8 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_9 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_10 = this.renderer.createText(this._el_9, 'Latitude', null);
        this._text_11 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_12 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_13 = this.renderer.createText(this._el_12, 'Longitude', null);
        this._text_14 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_15 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_16 = this.renderer.createText(this._el_15, 'Overall conditions', null);
        this._text_17 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_18 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_19 = this.renderer.createText(this._el_18, 'Temperature, ℃', null);
        this._text_20 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_21 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_22 = this.renderer.createText(this._el_21, 'Humidity', null);
        this._text_23 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_24 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_25 = this.renderer.createText(this._el_24, 'Pressure', null);
        this._text_26 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_27 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_28 = this.renderer.createText(this._el_27, 'Wind', null);
        this._text_29 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_30 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_31 = this.renderer.createText(this._el_30, 'Clouds', null);
        this._text_32 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_33 = import3.createRenderElement(this.renderer, this._el_4, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this._text_34 = this.renderer.createText(this._el_33, 'Actions', null);
        this._text_35 = this.renderer.createText(this._el_4, '\n        ', null);
        this._text_36 = this.renderer.createText(this._el_2, '\n    ', null);
        this._text_37 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_38 = import3.createRenderElement(this.renderer, this._el_0, 'tbody', new import3.InlineArray2(2, 'class', 'weather-table-body'), null);
        this._text_39 = this.renderer.createText(this._el_38, '   \n        ', null);
        this._anchor_40 = this.renderer.createTemplateAnchor(this._el_38, null);
        this._vc_40 = new import9.ViewContainer(40, 38, this, this._anchor_40);
        this._TemplateRef_40_5 = new import11.TemplateRef_(this, 40, this._anchor_40);
        this._NgFor_40_6 = new import13.Wrapper_NgFor(this._vc_40.vcRef, this._TemplateRef_40_5, this.parentView.injectorGet(import14.IterableDiffers, this.parentIndex), this.parentView.ref);
        this._text_41 = this.renderer.createText(this._el_38, '             \n    ', null);
        this._text_42 = this.renderer.createText(this._el_0, '           \n', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._el_15,
            this._text_16,
            this._text_17,
            this._el_18,
            this._text_19,
            this._text_20,
            this._el_21,
            this._text_22,
            this._text_23,
            this._el_24,
            this._text_25,
            this._text_26,
            this._el_27,
            this._text_28,
            this._text_29,
            this._el_30,
            this._text_31,
            this._text_32,
            this._el_33,
            this._text_34,
            this._text_35,
            this._text_36,
            this._text_37,
            this._el_38,
            this._text_39,
            this._anchor_40,
            this._text_41,
            this._text_42
        ]), null);
        return null;
    };
    View_CityWeatherTableComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (40 === requestNodeIndex))) {
            return this._TemplateRef_40_5;
        }
        if (((token === import15.NgFor) && (40 === requestNodeIndex))) {
            return this._NgFor_40_6.context;
        }
        return notFoundResult;
    };
    View_CityWeatherTableComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_40_0_0 = this.parentView.context.weatherList;
        this._NgFor_40_6.check_ngForOf(currVal_40_0_0, throwOnChange, false);
        this._NgFor_40_6.ngDoCheck(this, this._anchor_40, throwOnChange);
        this._vc_40.detectChangesInNestedViews(throwOnChange);
    };
    View_CityWeatherTableComponent1.prototype.destroyInternal = function () {
        this._vc_40.destroyNestedViews();
    };
    View_CityWeatherTableComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_CityWeatherTableComponent1.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 40)) {
            return new View_CityWeatherTableComponent2(this.viewUtils, this, 40, this._anchor_40, this._vc_40);
        }
        return null;
    };
    return View_CityWeatherTableComponent1;
}(import2.AppView));
var View_CityWeatherTableComponent2 = (function (_super) {
    __extends(View_CityWeatherTableComponent2, _super);
    function View_CityWeatherTableComponent2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_CityWeatherTableComponent2, renderType_CityWeatherTableComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_CityWeatherTableComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'tr', new import3.InlineArray4(4, 'city-weather', '', 'weather-color', ''), null);
        this.compView_0 = new import17.View_CityWeatherComponent0(this.viewUtils, this, 0, this._el_0);
        this._CityWeatherComponent_0_3 = new import17.Wrapper_CityWeatherComponent();
        this._WeatherColorDirective_0_4 = new import18.Wrapper_WeatherColorDirective(new import19.ElementRef(this._el_0));
        this._text_1 = this.renderer.createText(null, '\n        ', null);
        this.compView_0.create(this._CityWeatherComponent_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray4(4, 'deleteNotify', null, 'selectNotify', null), this.eventHandler(this.handleEvent_0));
        this._CityWeatherComponent_0_3.subscribe(this, this.eventHandler(this.handleEvent_0), true, true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), [disposable_0]);
        return null;
    };
    View_CityWeatherTableComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.CityWeatherComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._CityWeatherComponent_0_3.context;
        }
        if (((token === import20.WeatherColorDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._WeatherColorDirective_0_4.context;
        }
        return notFoundResult;
    };
    View_CityWeatherTableComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.$implicit;
        this._CityWeatherComponent_0_3.check_weather(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = this.context.index;
        this._CityWeatherComponent_0_3.check_index(currVal_0_0_1, throwOnChange, false);
        if (this._CityWeatherComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        var currVal_0_1_0 = this.context.$implicit;
        this._WeatherColorDirective_0_4.check_weather(currVal_0_1_0, throwOnChange, false);
        this._WeatherColorDirective_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_CityWeatherTableComponent2.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._CityWeatherComponent_0_3.ngOnDestroy();
    };
    View_CityWeatherTableComponent2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_CityWeatherTableComponent2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'deleteNotify')) {
            var pd_sub_0 = (this.parentView.parentView.context.remove($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'selectNotify')) {
            var pd_sub_1 = (this.parentView.parentView.context.select($event) !== false);
            result = (pd_sub_1 && result);
        }
        return result;
    };
    return View_CityWeatherTableComponent2;
}(import2.AppView));
//# sourceMappingURL=cityWeatherTable.component.ngfactory.js.map