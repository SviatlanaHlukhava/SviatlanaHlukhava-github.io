/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../scripts/components/windSection.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../css/windSection.css.shim';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/common/src/directives/ng_if';
import * as import13 from '../directives/windIcon.directive.ngfactory';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '../../../scripts/directives/windIcon.directive';
export var Wrapper_WindSectionComponent = (function () {
    function Wrapper_WindSectionComponent() {
        this._changed = false;
        this.context = new import0.WindSectionComponent();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_WindSectionComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_WindSectionComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_WindSectionComponent.prototype.check_wind = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.wind = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_WindSectionComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_WindSectionComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_WindSectionComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_WindSectionComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_WindSectionComponent;
}());
var renderType_WindSectionComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_WindSectionComponent_Host0 = (function (_super) {
    __extends(View_WindSectionComponent_Host0, _super);
    function View_WindSectionComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_WindSectionComponent_Host0, renderType_WindSectionComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_WindSectionComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'wind-section', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_WindSectionComponent0(this.viewUtils, this, 0, this._el_0);
        this._WindSectionComponent_0_3 = new Wrapper_WindSectionComponent();
        this.compView_0.create(this._WindSectionComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._WindSectionComponent_0_3.context);
    };
    View_WindSectionComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.WindSectionComponent) && (0 === requestNodeIndex))) {
            return this._WindSectionComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_WindSectionComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._WindSectionComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_WindSectionComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_WindSectionComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_WindSectionComponent_Host0;
}(import2.AppView));
export var WindSectionComponentNgFactory = new import7.ComponentFactory('wind-section', View_WindSectionComponent_Host0, import0.WindSectionComponent);
var styles_WindSectionComponent = [import8.styles];
var renderType_WindSectionComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_WindSectionComponent, {});
export var View_WindSectionComponent0 = (function (_super) {
    __extends(View_WindSectionComponent0, _super);
    function View_WindSectionComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_WindSectionComponent0, renderType_WindSectionComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
        this._expr_10 = import1.UNINITIALIZED;
    }
    View_WindSectionComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'wind'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import9.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import11.TemplateRef_(this, 2, this._anchor_2);
        this._NgIf_2_6 = new import10.Wrapper_NgIf(this._vc_2.vcRef, this._TemplateRef_2_5);
        this._text_3 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'wind-speed'), null);
        this._text_5 = this.renderer.createText(this._el_4, '', null);
        this._text_6 = this.renderer.createText(this._el_0, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._text_6
        ]), null);
        return null;
    };
    View_WindSectionComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import12.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6.context;
        }
        return notFoundResult;
    };
    View_WindSectionComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this.context.wind.getDegree();
        this._NgIf_2_6.check_ngIf(currVal_2_0_0, throwOnChange, false);
        this._NgIf_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        var currVal_10 = import3.inlineInterpolate(1, '', this.context.wind.getSpeed(), '');
        if (import3.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setText(this._text_5, currVal_10);
            this._expr_10 = currVal_10;
        }
    };
    View_WindSectionComponent0.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
    };
    View_WindSectionComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_WindSectionComponent1(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        return null;
    };
    return View_WindSectionComponent0;
}(import2.AppView));
var View_WindSectionComponent1 = (function (_super) {
    __extends(View_WindSectionComponent1, _super);
    function View_WindSectionComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_WindSectionComponent1, renderType_WindSectionComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_WindSectionComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray4(4, 'class', 'wind-icon', 'wind-icon', ''), null);
        this._WindIconDirective_0_3 = new import13.Wrapper_WindIconDirective(new import14.ElementRef(this._el_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_WindSectionComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import15.WindIconDirective) && (0 === requestNodeIndex))) {
            return this._WindIconDirective_0_3.context;
        }
        return notFoundResult;
    };
    View_WindSectionComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.context.wind.getDegree();
        this._WindIconDirective_0_3.check_degree(currVal_0_0_0, throwOnChange, false);
        this._WindIconDirective_0_3.ngDoCheck(this, this._el_0, throwOnChange);
    };
    View_WindSectionComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_WindSectionComponent1;
}(import2.AppView));
//# sourceMappingURL=windSection.component.ngfactory.js.map