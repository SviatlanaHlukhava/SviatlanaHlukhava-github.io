/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../scripts/components/cityForm.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../css/weatherTable.css.shim';
import * as import9 from '../../node_modules/@angular/forms/src/directives/ng_form.ngfactory';
import * as import10 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import11 from '../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import12 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/forms/src/directives/default_value_accessor';
import * as import15 from '@angular/forms/src/directives/control_value_accessor';
import * as import16 from '@angular/forms/src/directives/ng_model';
import * as import17 from '@angular/forms/src/directives/ng_control';
import * as import18 from '@angular/forms/src/directives/ng_control_status';
import * as import19 from '@angular/forms/src/directives/ng_form';
import * as import20 from '@angular/forms/src/directives/control_container';
export var Wrapper_CityFormComponent = (function () {
    function Wrapper_CityFormComponent() {
        this._changed = false;
        this.context = new import0.CityFormComponent();
    }
    Wrapper_CityFormComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_CityFormComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_CityFormComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_CityFormComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_CityFormComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_CityFormComponent.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.addNotify.subscribe(_eventHandler.bind(view, 'addNotify')));
        }
    };
    return Wrapper_CityFormComponent;
}());
var renderType_CityFormComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_CityFormComponent_Host0 = (function (_super) {
    __extends(View_CityFormComponent_Host0, _super);
    function View_CityFormComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_CityFormComponent_Host0, renderType_CityFormComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_CityFormComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'city-form', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_CityFormComponent0(this.viewUtils, this, 0, this._el_0);
        this._CityFormComponent_0_3 = new Wrapper_CityFormComponent();
        this.compView_0.create(this._CityFormComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._CityFormComponent_0_3.context);
    };
    View_CityFormComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.CityFormComponent) && (0 === requestNodeIndex))) {
            return this._CityFormComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_CityFormComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._CityFormComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_CityFormComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._CityFormComponent_0_3.ngOnDestroy();
    };
    View_CityFormComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_CityFormComponent_Host0;
}(import1.AppView));
export var CityFormComponentNgFactory = new import7.ComponentFactory('city-form', View_CityFormComponent_Host0, import0.CityFormComponent);
var styles_CityFormComponent = [import8.styles];
var renderType_CityFormComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.Emulated, styles_CityFormComponent, {});
export var View_CityFormComponent0 = (function (_super) {
    __extends(View_CityFormComponent0, _super);
    function View_CityFormComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_CityFormComponent0, renderType_CityFormComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckOnce);
    }
    View_CityFormComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'form', new import3.InlineArray2(2, 'class', 'city-form'), null);
        this._NgForm_0_3 = new import9.Wrapper_NgForm(null, null);
        this._ControlContainer_0_4 = this._NgForm_0_3.context;
        this._NgControlStatusGroup_0_5 = new import10.Wrapper_NgControlStatusGroup(this._ControlContainer_0_4);
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'label', new import3.InlineArray2(2, 'for', 'city'), null);
        this._text_3 = this.renderer.createText(this._el_2, 'City', null);
        this._text_4 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_5 = import3.createRenderElement(this.renderer, this._el_0, 'input', new import3.InlineArray4(4, 'name', 'city', 'type', 'text'), null);
        this._DefaultValueAccessor_5_3 = new import11.Wrapper_DefaultValueAccessor(this.renderer, new import13.ElementRef(this._el_5));
        this._NG_VALUE_ACCESSOR_5_4 = [this._DefaultValueAccessor_5_3.context];
        this._NgModel_5_5 = new import12.Wrapper_NgModel(this._ControlContainer_0_4, null, null, this._NG_VALUE_ACCESSOR_5_4);
        this._NgControl_5_6 = this._NgModel_5_5.context;
        this._NgControlStatus_5_7 = new import10.Wrapper_NgControlStatus(this._NgControl_5_6);
        this._text_6 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_0, 'button', import3.EMPTY_INLINE_ARRAY, null);
        this._text_8 = this.renderer.createText(this._el_7, 'Add', null);
        this._text_9 = this.renderer.createText(this._el_0, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray4(4, 'submit', null, 'reset', null), this.eventHandler(this.handleEvent_0));
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_5, new import3.InlineArray8(6, 'ngModelChange', null, 'input', null, 'blur', null), this.eventHandler(this.handleEvent_5));
        this._NgModel_5_5.subscribe(this, this.eventHandler(this.handleEvent_5), true);
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_7, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_7));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9
        ]), [
            disposable_0,
            disposable_1,
            disposable_2
        ]);
        return null;
    };
    View_CityFormComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.DefaultValueAccessor) && (5 === requestNodeIndex))) {
            return this._DefaultValueAccessor_5_3.context;
        }
        if (((token === import15.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_5_4;
        }
        if (((token === import16.NgModel) && (5 === requestNodeIndex))) {
            return this._NgModel_5_5.context;
        }
        if (((token === import17.NgControl) && (5 === requestNodeIndex))) {
            return this._NgControl_5_6;
        }
        if (((token === import18.NgControlStatus) && (5 === requestNodeIndex))) {
            return this._NgControlStatus_5_7.context;
        }
        if (((token === import19.NgForm) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._NgForm_0_3.context;
        }
        if (((token === import20.ControlContainer) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._ControlContainer_0_4;
        }
        if (((token === import18.NgControlStatusGroup) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._NgControlStatusGroup_0_5.context;
        }
        return notFoundResult;
    };
    View_CityFormComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._NgForm_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._NgControlStatusGroup_0_5.ngDoCheck(this, this._el_0, throwOnChange);
        this._DefaultValueAccessor_5_3.ngDoCheck(this, this._el_5, throwOnChange);
        var currVal_5_1_0 = 'city';
        this._NgModel_5_5.check_name(currVal_5_1_0, throwOnChange, false);
        var currVal_5_1_1 = this.context.city;
        this._NgModel_5_5.check_model(currVal_5_1_1, throwOnChange, false);
        this._NgModel_5_5.ngDoCheck(this, this._el_5, throwOnChange);
        this._NgControlStatus_5_7.ngDoCheck(this, this._el_5, throwOnChange);
        this._NgControlStatusGroup_0_5.checkHost(this, this, this._el_0, throwOnChange);
        this._NgControlStatus_5_7.checkHost(this, this, this._el_5, throwOnChange);
    };
    View_CityFormComponent0.prototype.destroyInternal = function () {
        this._NgModel_5_5.ngOnDestroy();
        this._NgForm_0_3.ngOnDestroy();
    };
    View_CityFormComponent0.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._NgForm_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_CityFormComponent0.prototype.handleEvent_5 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_5_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.city = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_CityFormComponent0.prototype.handleEvent_7 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.add() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_CityFormComponent0;
}(import1.AppView));
//# sourceMappingURL=cityForm.component.ngfactory.js.map